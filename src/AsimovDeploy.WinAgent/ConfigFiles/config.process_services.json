{
  "NodeFrontUrl": "http://test04:3333",
  "AgentGroup": "Process Services",

  "PackageSources":  {
    "BlueshiftTracker": { "Type": "FileSystem", "Uri": "file://tradera-build1.intranet.tradera.com/Drops/test/asimov/Blueshift.Tracker/Blueshift.Tracker" },
    "AppPush": { "Type": "FileSystem", "Uri": "file://tradera-build1.intranet.tradera.com/Drops/test/asimov/app.push/app.push" },
    "App.Wishlist.Reminders": { "Type": "FileSystem", "Uri": "file://tradera-build1.intranet.tradera.com/Drops/test/asimov/App.Wishlist.Reminders" }
  },

  "Units": [
    {
      "Name":         "Payment.ProcessingService",
      "Group":        "Payment",
      "Type":         "WebSite",

      "PackageInfo":  { "Source": "ProcessServiceTest", "InternalPath":  "_PublishedWebsites/PaymentProcessing"  },

      "SiteName":     "ProcessService.Payment",
      "SiteUrl":      "http://localhost:8015/PaymentProcessing",
      "CleanDeploy":  true,
      "VerifyUrls":   [ "http://localhost/health/status/PaymentProcessingService" ]
    },
    {
      "Name":         "Payment.QueryService",
      "Group":        "Payment",
      "Type":         "WebSite",

      "PackageInfo":  { "Source": "ProcessServiceTest", "InternalPath":  "_PublishedWebsites/PaymentQueries"  },

      "SiteName":     "ProcessService.Payment",
      "SiteUrl":      "http://localhost:8015/PaymentQueries",
      "CleanDeploy":  true,
      "VerifyUrls":   [ "http://localhost/health/status/PaymentQueryService" ]
    },
    {
      "Name":         "Payment.Handlers",
      "Group":        "Payment",
      "Type":         "WindowsService",
      "PackageInfo":  { "Source": "ProcessServiceTest", "InternalPath":  "_PublishedApplications/Payment/Payment.Handlers/net452"  },
      "ServiceName": "Payment.Payment.Handlers",
      "Installable": {
        "InstallType": "NServiceBus",
        "Credentials": {
          "Username": {
            "Type": "Text",
            "Default": "tradera\\payment_SVC"
          },
          "Password": {
            "Type": "Password"
          }
        }
      }
    },
    {
      "Name": "Listing.Endpoints",
      "Group": "Listing",
      "Type": "WebSite",
      "SiteName": "ProcessService.Listing",
      "SiteUrl": "http://localhost:8107",
      "PackageInfo": { "Source": "ProcessServiceTest", "InternalPath":  "_PublishedWebsites/EmptySite"  },

      "Installable": {
        "TargetPath": "D:\\Services\\ProcessServices\\Listing\\Endpoints\\Root",

        "Install": "
        Import-module WebAdministration;
$Port = ([System.Uri]$SiteUrl).Port;
New-WebAppPool -Name \"${SiteName}\"
$pool = Get-Item \"IIS:\\AppPools\\${SiteName}\"
$pool.startMode = 'AlwaysRunning'
$pool.processModel.userName = $Username;
$pool.processModel.password = $Password;
$pool.processModel.identityType = 3;
$pool.managedRuntimeVersion = 'v4.0'
$pool | Set-Item
New-WebSite -Name $SiteName -ApplicationPool \"${SiteName}\" -PhysicalPath \"$(pwd)\" -Port $Port
Set-ItemProperty IIS:\\Sites\\$SiteName -name EnabledProtocols -value 'net.pipe,net.tcp'
New-ItemProperty -Path IIS:\\Sites\\$SiteName -name bindings -value @{protocol='net.tcp';bindingInformation=\"8007:*\"}
New-ItemProperty -Path IIS:\\Sites\\$SiteName -name bindings -value @{protocol='net.pipe';bindingInformation='*';ipaddress='*'}
                ",
                 "InstallParameters": {
                    "Username": { "Type": "Text", "Default": "tradera\\listing_svc" },
                    "Password": { "Type": "Password"}
                },
                "Uninstall": "
Import-module WebAdministration;
Remove-WebSite -name $SiteName
Remove-WebAppPool -Name \"${SiteName}\"
                "
            }
        },
        {
            "Name":         "Listing.Endpoints.ChangeItem",
            "Group":        "Listing",
            "Type":         "WebSite",

            "PackageInfo":  { "Source": "ProcessServiceTest", "InternalPath":  "_PublishedWebsites/ChangeItem"  },

            "SiteName":     "ProcessService.Listing",
            "SiteUrl":      "http://localhost:8007/ChangeItem",
            "CleanDeploy":  true,
            "VerifyUrls":   [ "http://localhost/health/status/ChangeItemService" ],
            "Installable": {
                "TargetPath": "D:\\Services\\ProcessServices\\Listing\\Endpoints\\ChangeItem",

                "Install": "
Import-module WebAdministration;
New-Item IIS:\\Sites\\$SiteName\\ChangeItem -physicalPath $(pwd) -applicationPool \"${SiteName}\" -type Application
$parentProtocols = Get-ItemProperty IIS:\\Sites\\$SiteName -name enabledProtocols
Set-ItemProperty IIS:\\Sites\\$SiteName\\ChangeItem -name enabledProtocols -value $parentProtocols
Set-ASApplication -SiteName $SiteName -AutoStartMode All -VirtualPath ChangeItem
                ",
                "Uninstall": "\r\n
Import-module WebAdministration;\r\n
Remove-WebApplication -Name ChangeItem -Site $SiteName
                "
            }
        },
        {
            "Name":         "Listing.Endpoints.CreateItem",
            "Group":        "Listing",
            "Type":         "WebSite",

            "PackageInfo":  { "Source": "ProcessServiceTest", "InternalPath":  "_PublishedWebsites/CreateItem"  },

            "SiteName":     "ProcessService.Listing",
            "SiteUrl":      "http://localhost:8007/CreateItem",
            "CleanDeploy":  true,
            "VerifyUrls":   [ "http://localhost/health/status/CreateItemService" ],
            "Installable": {
                "TargetPath": "D:\\Services\\ProcessServices\\Listing\\Endpoints\\CreateItem",

                "Install": "
Import-module WebAdministration;
New-Item IIS:\\Sites\\$SiteName\\CreateItem -physicalPath $(pwd) -applicationPool \"${SiteName}\" -type Application
$parentProtocols = Get-ItemProperty IIS:\\Sites\\$SiteName -name enabledProtocols
Set-ItemProperty IIS:\\Sites\\$SiteName\\CreateItem -name enabledProtocols -value $parentProtocols
Set-ASApplication -SiteName $SiteName -AutoStartMode All -VirtualPath CreateItem
                ",
                "Uninstall": "\r\n
Import-module WebAdministration;\r\n
Remove-WebApplication -Name CreateItem -Site $SiteName
                "
            }
        },
        {
            "Name":         "Listing.Endpoints.ItemRestart",
            "Group":        "Listing",
            "Type":         "WebSite",

            "PackageInfo":  { "Source": "ProcessServiceTest", "InternalPath":  "_PublishedWebsites/ItemRestart"  },

            "SiteName":     "ProcessService.Listing",
            "SiteUrl":      "http://localhost:8007/ItemRestart",
            "CleanDeploy":  true,
            "VerifyUrls":   [ "http://localhost/health/status/ItemRestartService" ],
            "Installable": {
                "TargetPath": "D:\\Services\\ProcessServices\\Listing\\Endpoints\\ItemRestart",

                "Install": "
Import-module WebAdministration;
New-Item IIS:\\Sites\\$SiteName\\ItemRestart -physicalPath $(pwd) -applicationPool \"${SiteName}\" -type Application
$parentProtocols = Get-ItemProperty IIS:\\Sites\\$SiteName -name enabledProtocols
Set-ItemProperty IIS:\\Sites\\$SiteName\\ItemRestart -name enabledProtocols -value $parentProtocols
Set-ASApplication -SiteName $SiteName -AutoStartMode All -VirtualPath ItemRestart
                ",
                "Uninstall": "\r\n
Import-module WebAdministration;\r\n
Remove-WebApplication -Name ItemRestart -Site $SiteName
                "
            }
        },
        {
            "Name":         "Listing.Endpoints.ItemQuery",
            "Group":        "Listing",
            "Type":         "WebSite",

            "PackageInfo":  { "Source": "ProcessServiceTest", "InternalPath":  "_PublishedWebsites/ItemQuery"  },

            "SiteName":     "ProcessService.Listing",
            "SiteUrl":      "http://localhost:8007/ItemQuery",
            "CleanDeploy":  true,
            "VerifyUrls":   [ "http://localhost/health/status/ItemQueryService" ],
            "Installable": {
                "TargetPath": "D:\\Services\\ProcessServices\\Listing\\Endpoints\\ItemQuery",

                "Install": "
Import-module WebAdministration;
New-Item IIS:\\Sites\\$SiteName\\ItemQuery -physicalPath $(pwd) -applicationPool \"${SiteName}\" -type Application
$parentProtocols = Get-ItemProperty IIS:\\Sites\\$SiteName -name enabledProtocols
Set-ItemProperty IIS:\\Sites\\$SiteName\\ItemQuery -name enabledProtocols -value $parentProtocols
Set-ASApplication -SiteName $SiteName -AutoStartMode All -VirtualPath ItemQuery
                ",
                "Uninstall": "\r\n
Import-module WebAdministration;\r\n
Remove-WebApplication -Name ItemQuery -Site $SiteName
                "
            }
        },
        {
            "Name": "Listing.Endpoints.EbayChangeItem",
            "Group": "Listing",
            "Type": "WebSite",
            "SiteName": "ProcessService.Listing.Ebay",
            "SiteUrl": "http://localhost:8010/EbayChangeItem",
            "PackageInfo":  { "Source": "ProcessServiceTest", "InternalPath":  "_PublishedWebsites/EbayChangeItem"  },
            "CleanDeploy":  true,
            "VerifyUrls":   [ "http://localhost/health/status/EbayChangeItemService" ],
            "Installable": {
                "TargetPath": "D:\\Services\\ProcessServices\\Listing\\Endpoints\\EbayChangeItem",

                "Install": "
Import-module WebAdministration;
$SitePath = Split-Path $(pwd);
$Port = ([System.Uri]$SiteUrl).Port;
New-WebAppPool -Name \"${SiteName}\"
$pool = Get-Item \"IIS:\\AppPools\\${SiteName}\"
$pool.startMode = 'AlwaysRunning'
$pool.processModel.userName = $Username;
$pool.processModel.password = $Password;
$pool.processModel.identityType = 3;
$pool | Set-Item
New-WebSite -Name $SiteName -ApplicationPool \"${SiteName}\" -PhysicalPath \"${SitePath}\" -Port $Port
Set-ItemProperty IIS:\\Sites\\$SiteName -name EnabledProtocols -value 'http,net.pipe,net.tcp'
Remove-ItemProperty -path IIS:\\Sites\\$SiteName -name bindings
New-ItemProperty -Path IIS:\\Sites\\$SiteName -name bindings -value @{protocol='net.tcp';bindingInformation=\"${Port}:*\"}
New-ItemProperty -Path IIS:\\Sites\\$SiteName -name bindings -value @{protocol='net.pipe';bindingInformation='*';ipaddress='*'}

New-Item IIS:\\Sites\\$SiteName\\EbayChangeItem -physicalPath \"$(pwd)\" -applicationPool \"${SiteName}\" -type Application
$parentProtocols = Get-ItemProperty IIS:\\Sites\\$SiteName -name enabledProtocols
Set-ItemProperty IIS:\\Sites\\$SiteName\\EbayChangeItem -name enabledProtocols -value $parentProtocols
Set-ASApplication -SiteName $SiteName -AutoStartMode All -VirtualPath EbayChangeItem
                ",
                 "InstallParameters": {
                    "Username": { "Type": "Text", "Default": "tradera\\listing_svc" },
                    "Password": { "Type": "Password"}
                },
                "Uninstall": "
Import-module WebAdministration
Remove-WebApplication -Name EbayChangeItem -Site $SiteName
Remove-WebSite -name $SiteName
Remove-WebAppPool -Name \"${SiteName}\"
                "
            }
        },
        {
            "Name":         "Listing.CreateItem.Handler",
            "Group":        "Listing",
            "Type":         "WindowsService",
            "PackageInfo":  { "Source": "ProcessServiceTest", "InternalPath":  "_PublishedApplications/Listing/CreateItem"  },
            "ServiceName":  "Listing.CreateItem",
            "Installable": {
                "InstallType": "NServiceBus",
                "Credentials": {
                    "Username": {
                        "Type": "Text",
                        "Default": "tradera\\Listing_svc"
                    },
                    "Password": {
                        "Type": "Password"
                    }
                }
            }
        },
        {
            "Name":         "Listing.GenerateItemTimeExpired",
            "Group":        "Listing",
            "Type":         "WindowsService",
            "ServiceName":  "Listing.GenerateItemTimeExpired",
            "PackageInfo":  { "Source": "ProcessServiceTest", "InternalPath":  "_PublishedApplications/Listing/GenerateItemTimeExpired"  },
            "Installable": {
                "TargetPath": "D:\\Services\\ProcessServices\\Listing\\Generators\\GenerateItemTimeExpired",
                "Install": ".\\Listing.GenerateItemTimeExpired.exe install -username:\"$Username\" -password:\"$Password\" -servicename:\"Listing.GenerateItemTimeExpired\" -displayname:\"Listing.GenerateItemTimeExpired\"",
                "InstallParameters": {
                    "Username": {
                        "Type": "Text",
                        "Default": "tradera\\Listing_svc"
                    },
                    "Password": {
                        "Type": "Password"
                    }
                },
                "Uninstall": ".\\Listing.GenerateItemTimeExpired.exe uninstall -servicename:\"Listing.MessageGenerators.GenerateItemTimeExpired\""
            }
        },
        {
            "Name":         "Listing.CreateShopItem.Handler",
            "Group":        "Listing",
            "Type":         "WindowsService",
            "PackageInfo":  { "Source": "ProcessServiceTest", "InternalPath":  "_PublishedApplications/Listing/CreateShopItem"  },
            "ServiceName":  "Listing.CreateShopItem",
            "Installable": {
                "TargetPath": "D:\\Services\\ProcessServices\\Listing\\Handlers\\CreateShopItem",
                "Install": ".\\NServiceBus.Host.exe -install -username=\"$Username\" -password=\"$Password\" -serviceName=\"$ServiceName\" -displayName=\"$ServiceName\" NServiceBus.Production NServiceBus.PerformanceCounters",
                "InstallParameters": {
                    "Username": {
                        "Type": "Text",
                        "Default": "tradera\\Listing_svc"
                    },
                    "Password": {
                        "Type": "Password"
                    }
                },
                "Uninstall": ".\\NServiceBus.Host.exe -uninstall -serviceName=\"$ServiceName\""
            }
        },
        {
            "Name":         "Listing.EbayChangeItem.Handler",
            "Group":        "Listing",
            "Type":         "WindowsService",
            "PackageInfo":  { "Source": "ProcessServiceTest", "InternalPath":  "_PublishedApplications/Listing/EbayChangeItem"  },
            "ServiceName":  "Listing.EbayChangeItem",
            "Installable": {
                "InstallType": "NServiceBus",
                "Credentials": {
                    "Username": {
                        "Type": "Text",
                        "Default": "tradera\\Listing_svc"
                    },
                    "Password": {
                        "Type": "Password"
                    }
                }
            }
        },
        {
            "Name":         "Listing.ItemChange",
            "Group":        "Listing",
            "Type":         "WindowsService",
            "PackageInfo":  { "Source": "ProcessServiceTest", "InternalPath":  "_PublishedApplications/Listing/ItemChange"  },
            "ServiceName":  "Listing.ItemChange",
            "Installable": {
                "InstallType": "NServiceBus",
                "Credentials": {
                    "Username": {
                        "Type": "Text",
                        "Default": "tradera\\Listing_svc"
                    },
                    "Password": {
                        "Type": "Password"
                    }
                }
            }
        },
        {
            "Name":         "Listing.ItemClosing",
            "Group":        "Listing",
            "Type":         "WindowsService",
            "PackageInfo":  { "Source": "ProcessServiceTest", "InternalPath":  "_PublishedApplications/Listing/ItemClosing"  },
            "ServiceName": "Listing.ItemClosing",
            "Installable": {
                "InstallType": "NServiceBus",
                "Credentials": {
                    "Username": {
                        "Type": "Text",
                        "Default": "tradera\\Listing_svc"
                    },
                    "Password": {
                        "Type": "Password"
                    }
                }
            }
        },
          {
            "Name": "Listing.EventBridge.Handler",
            "Group": "Listing",
            "Type": "WindowsService",
            "PackageInfo": {
              "Source": "ProcessServiceTest",
              "InternalPath": "_PublishedApplications/Listing/EventBridge"
            },
            "ServiceName": "Listing.EventBridge",
            "Installable": {
              "InstallType": "NServiceBus",
              "Credentials": {
                "Username": {
                  "Type": "Text",
                  "Default": "tradera\\Listing_svc"
                },
                "Password": {
                  "Type": "Password"
                }
              }
            }
          },
        {
            "Name":         "Draft.DraftPublishedHandler",
            "Type":         "WindowsService",
            "PackageInfo":  { "Source": "ProcessServiceTest", "InternalPath":  "_PublishedApplications/Draft/DraftPublishedHandler"  },
            "ServiceName": "Draft.DraftPublishedHandler",
            "Installable": {
                "InstallType": "NServiceBus",
                "Credentials": {
                    "Username": {
                        "Type": "Text",
                        "Default": "tradera\\Draft_svc"
                    },
                    "Password": {
                        "Type": "Password"
                    }
                }
            }
        },
        {
            "Name": "Draft.Endpoints",
            "Type": "WebSite",
            "SiteName": "Application.Draft",
            "SiteUrl": "http://localhost:8011",
            "PackageInfo": { "Source": "ProcessServiceTest", "InternalPath":  "_PublishedWebsites/EmptySite"  },

            "Installable": {
                "TargetPath": "D:\\Services\\Applications\\Draft\\Endpoints\\Root",

                "Install": "
Import-module WebAdministration;
$Port = ([System.Uri]$SiteUrl).Port;
New-WebAppPool -Name \"${SiteName}\"
$pool = Get-Item \"IIS:\\AppPools\\${SiteName}\"
$pool.startMode = 'AlwaysRunning'
$pool.managedRuntimeVersion = 'v4.0'
$pool.processModel.userName = $Username;
$pool.processModel.password = $Password;
$pool.processModel.identityType = 3;
$pool.managedRuntimeVersion = 'v4.0'
$pool | Set-Item
New-WebSite -Name $SiteName -ApplicationPool \"${SiteName}\" -PhysicalPath \"$(pwd)\" -Port $Port
Set-ItemProperty IIS:\\Sites\\$SiteName -name EnabledProtocols -value 'http,net.pipe,net.tcp'
Remove-ItemProperty -path IIS:\\Sites\\$SiteName -name bindings
New-ItemProperty -Path IIS:\\Sites\\$SiteName -name bindings -value @{protocol='net.tcp';bindingInformation=\"${Port}:*\"}
New-ItemProperty -Path IIS:\\Sites\\$SiteName -name bindings -value @{protocol='net.pipe';bindingInformation='*';ipaddress='*'}
                ",
                 "InstallParameters": {
                    "Username": { "Type": "Text", "Default": "tradera\\cart_svc" },
                    "Password": { "Type": "Password"}
                },
                "Uninstall": "
Import-module WebAdministration;
Remove-WebSite -name $SiteName
Remove-WebAppPool -Name \"${SiteName}\"
                "
            }
        },
        {
            "Name":         "Draft.Endpoints.Query",
            "Type":         "WebSite",

            "PackageInfo":  { "Source": "ProcessServiceTest", "InternalPath":  "_PublishedWebsites/DraftQueryService"  },

            "SiteName":     "Application.Draft",
            "SiteUrl":      "http://localhost:8011/Query",
            "CleanDeploy":  true,
            "Installable": {
                "TargetPath": "D:\\Services\\Applications\\Draft\\Endpoints\\Query",

                "Install": "
Import-module WebAdministration;
New-Item IIS:\\Sites\\$SiteName\\Query -physicalPath $(pwd) -applicationPool \"${SiteName}\" -type Application
$parentProtocols = Get-ItemProperty IIS:\\Sites\\$SiteName -name enabledProtocols
Set-ItemProperty IIS:\\Sites\\$SiteName\\Query -name enabledProtocols -value $parentProtocols
Set-ASApplication -SiteName $SiteName -AutoStartMode All -VirtualPath Query
                ",
                "Uninstall": "\r\n
Import-module WebAdministration;\r\n
Remove-WebApplication -Name Query -Site $SiteName
                "
            }
        },
        {
            "Name":         "Draft.Endpoints.Command",
            "Type":         "WebSite",

            "PackageInfo":  { "Source": "ProcessServiceTest", "InternalPath":  "_PublishedWebsites/DraftCommandService"  },

            "SiteName":     "Application.Draft",
            "SiteUrl":      "http://localhost:8011/Command",
            "CleanDeploy":  true,
            "Installable": {
                "TargetPath": "D:\\Services\\Applications\\Draft\\Endpoints\\Command",

                "Install": "
Import-module WebAdministration;
New-Item IIS:\\Sites\\$SiteName\\Command -physicalPath $(pwd) -applicationPool \"${SiteName}\" -type Application
$parentProtocols = Get-ItemProperty IIS:\\Sites\\$SiteName -name enabledProtocols
Set-ItemProperty IIS:\\Sites\\$SiteName\\Command -name enabledProtocols -value $parentProtocols
Set-ASApplication -SiteName $SiteName -AutoStartMode All -VirtualPath Command
                ",
                "Uninstall": "\r\n
Import-module WebAdministration;\r\n
Remove-WebApplication -Name Command -Site $SiteName
                "
            }
        },
        {
            "Name": "CaseManagement.Endpoints",
            "Type": "WebSite",
            "SiteName": "ProcessService.CaseManagement",
            "SiteUrl": "http://localhost:8022",
            "PackageInfo": { "Source": "ProcessServiceTest", "InternalPath":  "_PublishedWebsites/EmptySite"  },

            "Installable": {
                "TargetPath": "D:\\Services\\ProcessServices\\CaseManagement\\Endpoints\\Root",

                "Install": "
Import-module WebAdministration;
$Port = ([System.Uri]$SiteUrl).Port;
New-WebAppPool -Name \"${SiteName}\"
$pool = Get-Item \"IIS:\\AppPools\\${SiteName}\"
$pool.startMode = 'AlwaysRunning'
$pool.processModel.userName = $Username;
$pool.processModel.password = $Password;
$pool.processModel.identityType = 3;
$pool.managedRuntimeVersion = 'v4.0'
$pool | Set-Item
New-WebSite -Name $SiteName -ApplicationPool \"${SiteName}\" -PhysicalPath \"$(pwd)\" -Port $Port
Set-ItemProperty IIS:\\Sites\\$SiteName -name EnabledProtocols -value 'http,net.pipe,net.tcp'
Remove-ItemProperty -path IIS:\\Sites\\$SiteName -name bindings
New-ItemProperty -Path IIS:\\Sites\\$SiteName -name bindings -value @{protocol='net.tcp';bindingInformation=\"${Port}:*\"}
New-ItemProperty -Path IIS:\\Sites\\$SiteName -name bindings -value @{protocol='net.pipe';bindingInformation='*';ipaddress='*'}
                ",
                 "InstallParameters": {
                    "Username": { "Type": "Text", "Default": "tradera\\casemanagement_svc" },
                    "Password": { "Type": "Password"}
                },
                "Uninstall": "
Import-module WebAdministration;
Remove-WebSite -name $SiteName
Remove-WebAppPool -Name \"${SiteName}\"
                "
            }
        },
        {
            "Name":         "CaseManagement.Endpoints.Query",
            "Type":         "WebSite",

            "PackageInfo":  { "Source": "ProcessServiceTest", "InternalPath":  "_PublishedWebsites/CaseManagementQueryService"  },

            "SiteName":     "ProcessService.CaseManagement",
            "SiteUrl":      "http://localhost:8022/Query",
            "CleanDeploy":  true,
            "Installable": {
                "TargetPath": "D:\\Services\\ProcessServices\\CaseManagement\\Endpoints\\Query",

                "Install": "
Import-module WebAdministration;
New-Item IIS:\\Sites\\$SiteName\\Query -physicalPath $(pwd) -applicationPool \"${SiteName}\" -type Application
$parentProtocols = Get-ItemProperty IIS:\\Sites\\$SiteName -name enabledProtocols
Set-ItemProperty IIS:\\Sites\\$SiteName\\Query -name enabledProtocols -value $parentProtocols
Set-ASApplication -SiteName $SiteName -AutoStartMode All -VirtualPath Query
                ",
                "Uninstall": "\r\n
Import-module WebAdministration;\r\n
Remove-WebApplication -Name Query -Site $SiteName
                "
            }
        },
        {
            "Name":         "CaseManagement.Endpoints.Command",
            "Type":         "WebSite",

            "PackageInfo":  { "Source": "ProcessServiceTest", "InternalPath":  "_PublishedWebsites/CaseManagementCommandService"  },

            "SiteName":     "ProcessService.CaseManagement",
            "SiteUrl":      "http://localhost:8022/Command",
            "CleanDeploy":  true,
            "Installable": {
                "TargetPath": "D:\\Services\\ProcessServices\\CaseManagement\\Endpoints\\Command",

                "Install": "
Import-module WebAdministration;
New-Item IIS:\\Sites\\$SiteName\\Command -physicalPath $(pwd) -applicationPool \"${SiteName}\" -type Application
$parentProtocols = Get-ItemProperty IIS:\\Sites\\$SiteName -name enabledProtocols
Set-ItemProperty IIS:\\Sites\\$SiteName\\Command -name enabledProtocols -value $parentProtocols
Set-ASApplication -SiteName $SiteName -AutoStartMode All -VirtualPath Command
                ",
                "Uninstall": "\r\n
Import-module WebAdministration;\r\n
Remove-WebApplication -Name Command -Site $SiteName
                "
            }
        },
		{
            "Name":         "CaseManagementProcess.CaseManagementHandler",
            "Type":         "WindowsService",
            "PackageInfo":  { "Source": "ProcessServiceTest", "InternalPath":  "_PublishedApplications/CaseManagement/CaseManagementHandler"  },
            "ServiceName":  "CaseManagementProcess.CaseManagementHandler",
            "Installable": {
                "InstallType": "NServiceBus",
                "Credentials": {
                    "Username": {
                        "Type": "Text",
                        "Default": "tradera\\CaseManagement_svc"
                    },
                    "Password": {
                        "Type": "Password"
                    }
                }
            }
        },
		{
            "Name":         "Archive.Endpoints.Query",
            "Type":         "WebSite",

            "PackageInfo":  { "Source": "ProcessServiceTest", "InternalPath":  "_PublishedWebsites/ArchiveQueryService"  },

            "SiteName":     "ProcessService.Archive.Queries",
            "SiteUrl":      "http://localhost:8026/Query",
            "CleanDeploy":  true,
            "Installable": {
                "TargetPath": "D:\\Services\\ProcessServices\\Archive\\Endpoints\\ArchiveQueryService\\Query",

                "Install": "
Import-module WebAdministration;
New-Item IIS:\\Sites\\$SiteName\\Query -physicalPath $(pwd) -applicationPool \"${SiteName}\" -type Application
$parentProtocols = Get-ItemProperty IIS:\\Sites\\$SiteName -name enabledProtocols
Set-ItemProperty IIS:\\Sites\\$SiteName\\Query -name enabledProtocols -value $parentProtocols
Set-ASApplication -SiteName $SiteName -AutoStartMode All -VirtualPath Query
                ",
                "Uninstall": "\r\n
Import-module WebAdministration;\r\n
Remove-WebApplication -Name Query -Site $SiteName
                "
            }
        },
		{
            "Name":         "InternalScoring.Handler",
            "Type":         "WindowsService",
            "PackageInfo":  { "Source": "ProcessServiceTest", "InternalPath":  "_PublishedApplications/InternalScoring/InternalScoringHandler"  },
            "ServiceName":  "InternalScoring.InternalScoringHandler",
            "Installable": {
                "InstallType": "NServiceBus",
                "Credentials": {
                    "Username": {
                        "Type": "Text",
                        "Default": "tradera\\casemanagement_svc"
                    },
                    "Password": {
                        "Type": "Password"
                    }
                }
            }
        },
		{
            "Name":         "InternalScoringProcess.QueryService",
            "Type":         "WebSite",

            "PackageInfo":  { "Source": "ProcessServiceTest", "InternalPath":  "_PublishedWebsites/InternalScoringQueryService"  },

            "SiteName":     "ProcessService.InternalScoring.Queries",
            "SiteUrl":      "http://localhost:8025/Query",
            "CleanDeploy":  true,
            "VerifyUrls":   [ "http://localhost/health/status/InternalScoringProcessQueryService" ],
			"Installable": {
				"TargetPath": "D:\\Services\\ProcessServices\\InternalScoring\\Endpoints\\InternalScoringQueryService\\Query",

				"Install": "
Import-module WebAdministration;
$ApplicationPath = pwd;
$SitePath = split-path $ApplicationPath;
$Port = ([System.Uri]$SiteUrl).Port;
New-WebAppPool -Name \"${SiteName}\"
$pool = Get-Item \"IIS:\\AppPools\\${SiteName}\"
$pool.startMode = 'AlwaysRunning'
$pool.processModel.userName = $Username;
$pool.processModel.password = $Password;
$pool.processModel.identityType = 3;
$pool.managedRuntimeVersion = 'v4.0'
$pool | Set-Item
New-WebSite -Name $SiteName -ApplicationPool \"${SiteName}\" -PhysicalPath \"$SitePath\" -Port $Port
Set-ItemProperty IIS:\\Sites\\$SiteName -name EnabledProtocols -value 'http,net.pipe,net.tcp'
Remove-ItemProperty -path IIS:\\Sites\\$SiteName -name bindings
New-ItemProperty -Path IIS:\\Sites\\$SiteName -name bindings -value @{protocol='net.tcp';bindingInformation=\"${Port}:*\"}
New-ItemProperty -Path IIS:\\Sites\\$SiteName -name bindings -value @{protocol='net.pipe';bindingInformation='*';ipaddress='*'}

New-Item IIS:\\Sites\\$SiteName\\Query -physicalPath $(pwd) -applicationPool \"${SiteName}\" -type Application
$parentProtocols = Get-ItemProperty IIS:\\Sites\\$SiteName -name enabledProtocols
Set-ItemProperty IIS:\\Sites\\$SiteName\\Query -name enabledProtocols -value $parentProtocols
Set-ASApplication -SiteName $SiteName -AutoStartMode All -VirtualPath Query
                ",
                 "InstallParameters": {
                    "Username": { "Type": "Text", "Default": "tradera\\casemanagement_svc" },
                    "Password": { "Type": "Password"}
                },
                "Uninstall": "\r\n
Import-module WebAdministration;\r\n
Remove-WebApplication -Name Query -Site $SiteName
                "
            }
        },
        {
            "Name":         "InternalScoringProcess.CommandService",
            "Type":         "WebSite",

            "PackageInfo":  { "Source": "ProcessServiceTest", "InternalPath":  "_PublishedWebsites/InternalScoringCommandService"  },

            "SiteName":     "ProcessService.InternalScoring.Commands",
            "SiteUrl":      "http://localhost:8025/Command",
            "CleanDeploy":  true,
            "VerifyUrls":   [ "http://localhost/health/status/FraudDetectionProcessCommandService" ],
			"Installable": {
                "TargetPath": "D:\\Services\\ProcessServices\\InternalScoring\\Endpoints\\InternalScoringCommandService\\Command",

                "Install": "
Import-module WebAdministration;
$ApplicationPath = pwd;
$SitePath = split-path $ApplicationPath;
$Port = ([System.Uri]$SiteUrl).Port;
New-WebAppPool -Name \"${SiteName}\"
$pool = Get-Item \"IIS:\\AppPools\\${SiteName}\"
$pool.startMode = 'AlwaysRunning'
$pool.processModel.userName = $Username;
$pool.processModel.password = $Password;
$pool.processModel.identityType = 3;
$pool.managedRuntimeVersion = 'v4.0'
$pool | Set-Item
New-WebSite -Name $SiteName -ApplicationPool \"${SiteName}\" -PhysicalPath \"$SitePath\" -Port $Port
Set-ItemProperty IIS:\\Sites\\$SiteName -name EnabledProtocols -value 'http,net.pipe,net.tcp'
Remove-ItemProperty -path IIS:\\Sites\\$SiteName -name bindings
New-ItemProperty -Path IIS:\\Sites\\$SiteName -name bindings -value @{protocol='net.tcp';bindingInformation=\"${Port}:*\"}
New-ItemProperty -Path IIS:\\Sites\\$SiteName -name bindings -value @{protocol='net.pipe';bindingInformation='*';ipaddress='*'}

New-Item IIS:\\Sites\\$SiteName\\Command -physicalPath $(pwd) -applicationPool \"${SiteName}\" -type Application
$parentProtocols = Get-ItemProperty IIS:\\Sites\\$SiteName -name enabledProtocols
Set-ItemProperty IIS:\\Sites\\$SiteName\\Command -name enabledProtocols -value $parentProtocols
Set-ASApplication -SiteName $SiteName -AutoStartMode All -VirtualPath Command
                ",
                 "InstallParameters": {
                    "Username": { "Type": "Text", "Default": "tradera\\casemanagement_svc" },
                    "Password": { "Type": "Password"}
                },
                "Uninstall": "\r\n
Import-module WebAdministration;\r\n
Remove-WebApplication -Name Command -Site $SiteName
                "
            }
        },
        {
            "Name":         "Charity.ModifyItemHandler",
            "Type":         "WindowsService",
            "PackageInfo":  { "Source": "ProcessServiceTest", "InternalPath":  "_PublishedApplications/Charity/Charity.ModifyItemHandler"  },
            "ServiceName":  "Charity.ModifyItemHandler",
            "Installable": {
                "TargetPath": "D:\\Applications\\Charity\\Charity.ModifyItemHandler",
                "Install": ".\\NServiceBus.Host.exe -install -username=\"$Username\" -password=\"$Password\" -serviceName=\"$ServiceName\" -displayName=\"$ServiceName\" NServiceBus.Production NServiceBus.PerformanceCounters",
                "InstallParameters": {
                    "Username": {
                        "Type": "Text",
                        "Default": "tradera\\marketing_svc"
                    },
                    "Password": {
                        "Type": "Password"
                    }
                },
                "Uninstall": ".\\NServiceBus.Host.exe -uninstall -serviceName=\"$ServiceName\""
            }
        },
        {
            "Name":         "OrderManagement.PurchaseOrderStatusHandler",
            "Type":         "WindowsService",
            "PackageInfo":  { "Source": "ProcessServiceTest", "InternalPath":  "_PublishedApplications/OrderManagement/PurchaseOrderStatusHandler"  },
            "ServiceName":  "OrderManagement.PurchaseOrderStatusHandler",
            "Installable": {
                "TargetPath": "D:\\Services\\ProcessServices\\OrderManagement\\Handlers\\PurchaseOrderStatusHandler",
                "Install": ".\\NServiceBus.Host.exe -install -username=\"$Username\" -password=\"$Password\" -serviceName=\"$ServiceName\" -displayName=\"$ServiceName\" NServiceBus.Production NServiceBus.PerformanceCounters",
                "InstallParameters": {
                    "Username": {
                        "Type": "Text",
                        "Default": "tradera\\ordermanagement_svc"
                    },
                    "Password": {
                        "Type": "Password"
                    }
                },
                "Uninstall": ".\\NServiceBus.Host.exe -uninstall -serviceName=\"$ServiceName\""
            }
        },
        {
            "Name":         "OrderManagement.EventBridge.Handler",
            "Type":         "WindowsService",
            "PackageInfo":  { "Source": "ProcessServiceTest", "InternalPath":  "_PublishedApplications/OrderManagement/EventBridge"  },
            "ServiceName":  "OrderManagement.EventBridge.Handler",
            "Installable": {
                "TargetPath": "D:\\Services\\ProcessServices\\OrderManagement\\Handlers\\EventBridge",
                "Install": ".\\NServiceBus.Host.exe -install -username=\"$Username\" -password=\"$Password\" -serviceName=\"$ServiceName\" -displayName=\"$ServiceName\" NServiceBus.Production NServiceBus.PerformanceCounters",
                "InstallParameters": {
                    "Username": {
                        "Type": "Text",
                        "Default": "tradera\\ordermanagement_svc"
                    },
                    "Password": {
                        "Type": "Password"
                    }
                },
                "Uninstall": ".\\NServiceBus.Host.exe -uninstall -serviceName=\"$ServiceName\""
            }
        },
        {
            "Name":         "OrderManagement.CommandService",
            "Type":         "WebSite",

            "PackageInfo":  { "Source": "ProcessServiceTest", "InternalPath":  "_PublishedWebsites/OrderManagementCommandService"  },

            "SiteName":     "ProcessService.OrderManagement.Commands",
            "SiteUrl":      "http://localhost:8041/Command",
            "CleanDeploy":  true,
            "VerifyUrls":   [ "http://localhost/health/status/OrderManagementCommandService" ],
            "Installable": {
                "TargetPath": "D:\\Services\\ProcessServices\\OrderManagement\\Endpoints\\Command",

                "Install": "
Import-module WebAdministration;
$ApplicationPath = pwd;
$SitePath = split-path $ApplicationPath;
$Port = ([System.Uri]$SiteUrl).Port;
New-WebAppPool -Name \"${SiteName}\"
$pool = Get-Item \"IIS:\\AppPools\\${SiteName}\"
$pool.startMode = 'AlwaysRunning'
$pool.processModel.userName = $Username;
$pool.processModel.password = $Password;
$pool.processModel.identityType = 3;
$pool.managedRuntimeVersion = 'v4.0'
$pool | Set-Item
New-WebSite -Name $SiteName -ApplicationPool \"${SiteName}\" -PhysicalPath \"$SitePath\" -Port $Port
Set-ItemProperty IIS:\\Sites\\$SiteName -name EnabledProtocols -value 'http,net.pipe,net.tcp'
Remove-ItemProperty -path IIS:\\Sites\\$SiteName -name bindings
New-ItemProperty -Path IIS:\\Sites\\$SiteName -name bindings -value @{protocol='net.tcp';bindingInformation=\"${Port}:*\"}
New-ItemProperty -Path IIS:\\Sites\\$SiteName -name bindings -value @{protocol='net.pipe';bindingInformation='*';ipaddress='*'}

New-Item IIS:\\Sites\\$SiteName\\Command -physicalPath $(pwd) -applicationPool \"${SiteName}\" -type Application
$parentProtocols = Get-ItemProperty IIS:\\Sites\\$SiteName -name enabledProtocols
Set-ItemProperty IIS:\\Sites\\$SiteName\\Command -name enabledProtocols -value $parentProtocols
Set-ASApplication -SiteName $SiteName -AutoStartMode All -VirtualPath Command
                ",
                "InstallParameters": {
                    "Username": { "Type": "Text", "Default": "tradera\\ordermanagement_svc" },
                    "Password": { "Type": "Password"}
                },
                "Uninstall": "
Import-module WebAdministration;
Remove-WebApplication -Name Command -Site $SiteName
Remove-WebSite -name $SiteName
Remove-WebAppPool -Name \"${SiteName}\"
                "
            }
       },
       {
            "Name":         "OrderManagement.QueryService",
            "Type":         "WebSite",

            "PackageInfo":  { "Source": "ProcessServiceTest", "InternalPath":  "_PublishedWebsites/OrderManagementQueryService"  },

            "SiteName":     "ProcessService.OrderManagement.Queries",
            "SiteUrl":      "http://localhost:8042/Query",
            "CleanDeploy":  true,
            "VerifyUrls":   [ "http://localhost/health/status/OrderManagementQueryService" ],
            "Installable": {
                "TargetPath": "D:\\Services\\ProcessServices\\OrderManagement\\Endpoints\\Query",

                "Install": "
Import-module WebAdministration;
$ApplicationPath = pwd;
$SitePath = split-path $ApplicationPath;
$Port = ([System.Uri]$SiteUrl).Port;
New-WebAppPool -Name \"${SiteName}\"
$pool = Get-Item \"IIS:\\AppPools\\${SiteName}\"
$pool.startMode = 'AlwaysRunning'
$pool.processModel.userName = $Username;
$pool.processModel.password = $Password;
$pool.processModel.identityType = 3;
$pool.managedRuntimeVersion = 'v4.0'
$pool | Set-Item
New-WebSite -Name $SiteName -ApplicationPool \"${SiteName}\" -PhysicalPath \"$SitePath\" -Port $Port
Set-ItemProperty IIS:\\Sites\\$SiteName -name EnabledProtocols -value 'http,net.pipe,net.tcp'
Remove-ItemProperty -path IIS:\\Sites\\$SiteName -name bindings
New-ItemProperty -Path IIS:\\Sites\\$SiteName -name bindings -value @{protocol='net.tcp';bindingInformation=\"${Port}:*\"}
New-ItemProperty -Path IIS:\\Sites\\$SiteName -name bindings -value @{protocol='net.pipe';bindingInformation='*';ipaddress='*'}

New-Item IIS:\\Sites\\$SiteName\\Query -physicalPath $(pwd) -applicationPool \"${SiteName}\" -type Application
$parentProtocols = Get-ItemProperty IIS:\\Sites\\$SiteName -name enabledProtocols
Set-ItemProperty IIS:\\Sites\\$SiteName\\Query -name enabledProtocols -value $parentProtocols
Set-ASApplication -SiteName $SiteName -AutoStartMode All -VirtualPath Query
                ",
                "InstallParameters": {
                    "Username": { "Type": "Text", "Default": "tradera\\ordermanagement_svc" },
                    "Password": { "Type": "Password"}
                },
                "Uninstall": "
Import-module WebAdministration;
Remove-WebApplication -Name Query -Site $SiteName
Remove-WebSite -name $SiteName
Remove-WebAppPool -Name \"${SiteName}\"
                "
            }
       },
       {
            "Name":         "MemberNotifications.Handler",
            "Type":         "WindowsService",
            "PackageInfo":  { "Source": "ProcessServiceTest", "InternalPath":  "_PublishedApplications/MemberNotifications/Handler"  },
            "ServiceName":  "MemberNotifications.Handler",
            "Installable": {
                "TargetPath": "D:\\Applications\\MemberNotifications\\Handlers\\Handler",
                "Install": ".\\NServiceBus.Host.exe -install -username=\"$Username\" -password=\"$Password\" -serviceName=\"$ServiceName\" -displayName=\"$ServiceName\" NServiceBus.Production NServiceBus.PerformanceCounters",
                "InstallParameters": {
                    "Username": {
                        "Type": "Text",
                        "Default": "tradera\\MemberNotific_SVC"
                    },
                    "Password": {
                        "Type": "Password"
                    }
                },
                "Uninstall": ".\\NServiceBus.Host.exe -uninstall -serviceName=\"$ServiceName\""
            }
        },
        {
            "Name":         "Marketing.QueryService",
            "Type":         "WebSite",

            "PackageInfo":  { "Source": "ProcessServiceTest", "InternalPath":  "_PublishedWebsites/Marketing.Queries.Endpoint"  },

            "SiteName":     "ProcessService.Marketing.Queries",
            "SiteUrl":      "http://localhost:8008/Endpoint",
            "CleanDeploy":  true,
            "VerifyUrls":   [ "http://localhost/health/status/MarketingQueryService" ]
        },
        {
            "Name":         "Marketing.CommandService",
            "Type":         "WebSite",

            "PackageInfo":  { "Source": "ProcessServiceTest", "InternalPath":  "_PublishedWebsites/Marketing.Commands.Endpoint"  },

            "SiteName":     "ProcessService.Marketing.Commands",
            "SiteUrl":      "http://localhost:8009/Endpoint",
            "CleanDeploy":  true,
            "VerifyUrls":   [ "http://localhost/health/status/MarketingCommandService" ]
        },
        {
            "Name":			"Marketing.MarketingHandler",
            "Type":			"WindowsService",
            "PackageInfo":	{ "Source": "ProcessServiceTest", "InternalPath":  "_PublishedApplications/Marketing/MarketingHandler"  },
            "ServiceName":	"Marketing.MarketingHandler",
            "Installable": {
                "TargetPath": "D:\\Services\\ProcessServices\\Marketing\\Handlers\\Marketing.MarketingHandler",
                "Install": ".\\NServiceBus.Host.exe -install -username=\"$Username\" -password=\"$Password\" -serviceName=\"$ServiceName\" -displayName=\"$ServiceName\" NServiceBus.Production NServiceBus.PerformanceCounters",
                "InstallParameters": {
                    "Username": {
                        "Type": "Text",
                        "Default": "tradera\\marketing_svc"
                    },
                    "Password": {
                        "Type": "Password"
                    }
                },
                "Uninstall": ".\\NServiceBus.Host.exe -uninstall -serviceName=\"$ServiceName\""
            }
        },
        {
			"Name":			"Marketing.QueryStoreHandler",
			"Type":			"WindowsService",
			"PackageInfo":	{ "Source": "ProcessServiceTest", "InternalPath":  "_PublishedApplications/Marketing/QueryStoreHandler"  },
			"ServiceName":	"Marketing.QueryStoreHandler",
			"Actions": { "Verify": { "Type": "VerifyUrls", "Urls":	[ "http://localhost:8907/health" ] } },
            "Installable": {
                "TargetPath": "D:\\Services\\ProcessServices\\Marketing\\Handlers\\Marketing.QueryStoreHandler",
                "Install": ".\\NServiceBus.Host.exe -install -username=\"$Username\" -password=\"$Password\" -serviceName=\"$ServiceName\" -displayName=\"$ServiceName\" NServiceBus.Production NServiceBus.PerformanceCounters",
                "InstallParameters": {
                    "Username": {
                        "Type": "Text",
                        "Default": "tradera\\marketing_svc"
                    },
                    "Password": {
                        "Type": "Password"
                    }
                },
                "Uninstall": ".\\NServiceBus.Host.exe -uninstall -serviceName=\"$ServiceName\""
            }
		},
        {
			"Name":			"Marketing.GoogleProductHandler",
			"Type":			"WindowsService",
			"PackageInfo":	{ "Source": "Tradera.Test.Drops", "InternalPath":  "_PublishedApplications/Marketing/GoogleProductHandler"  },
			"ServiceName":	"Marketing.GoogleProductHandler",
            "Installable": {
                "TargetPath": "D:\\Services\\ProcessServices\\Marketing\\Handlers\\Marketing.GoogleProductHandler",
                "Install": ".\\NServiceBus.Host.exe -install -username=\"$Username\" -password=\"$Password\" -serviceName=\"$ServiceName\" -displayName=\"$ServiceName\" NServiceBus.Production NServiceBus.PerformanceCounters",
                "InstallParameters": {
                    "Username": {
                        "Type": "Text",
                        "Default": "tradera\\marketing_svc"
                    },
                    "Password": {
                        "Type": "Password"
                    }
                },
                "Uninstall": ".\\NServiceBus.Host.exe -uninstall -serviceName=\"$ServiceName\""
            }
		},
        {
            "Name": "Buying.Endpoints",
            "Type": "WebSite",
            "SiteName": "ProcessService.Buying",
            "SiteUrl": "http://localhost:8106",
            "PackageInfo": { "Source": "ProcessServiceTest", "InternalPath":  "_PublishedWebsites/EmptySite"  },

            "Installable": {
                "TargetPath": "D:\\Services\\ProcessServices\\Buying\\Endpoints\\Root",

                "Install": "
Import-module WebAdministration;
$Port = ([System.Uri]$SiteUrl).Port;
New-WebAppPool -Name \"${SiteName}\"
$pool = Get-Item \"IIS:\\AppPools\\${SiteName}\"
$pool.startMode = 'AlwaysRunning'
$pool.processModel.userName = $Username;
$pool.processModel.password = $Password;
$pool.processModel.identityType = 3;
$pool.managedRuntimeVersion = 'v4.0'
$pool | Set-Item
New-WebSite -Name $SiteName -ApplicationPool \"${SiteName}\" -PhysicalPath \"$(pwd)\" -Port $Port
Set-ItemProperty IIS:\\Sites\\$SiteName -name EnabledProtocols -value 'http,net.pipe,net.tcp'
New-ItemProperty -Path IIS:\\Sites\\$SiteName -name bindings -value @{protocol='net.tcp';bindingInformation=\"8006:*\"}
New-ItemProperty -Path IIS:\\Sites\\$SiteName -name bindings -value @{protocol='net.pipe';bindingInformation='*';ipaddress='*'}
                ",
                 "InstallParameters": {
                    "Username": { "Type": "Text", "Default": "tradera\\buying_svc" },
                    "Password": { "Type": "Password"}
                },
                "Uninstall": "
Import-module WebAdministration;
Remove-WebSite -name $SiteName
Remove-WebAppPool -Name \"${SiteName}\"
                "
            }
        },
        {
            "Name":         "Buying.Endpoints.BuyItem",
            "Type":         "WebSite",

            "PackageInfo":  { "Source": "ProcessServiceTest", "InternalPath":  "_PublishedWebsites/BuyItem"  },

            "SiteName":     "ProcessService.Buying",
            "SiteUrl":      "http://localhost:8006/BuyItem",
            "CleanDeploy":  true,
            "VerifyUrls":   [ "http://localhost/health/status/BuyItemService" ],
            "Installable": {
                "TargetPath": "D:\\Services\\ProcessServices\\Buying\\Endpoints\\BuyItem",

                "Install": "
Import-module WebAdministration;
New-Item IIS:\\Sites\\$SiteName\\BuyItem -physicalPath $(pwd) -applicationPool \"${SiteName}\" -type Application
$parentProtocols = Get-ItemProperty IIS:\\Sites\\$SiteName -name enabledProtocols
Set-ItemProperty IIS:\\Sites\\$SiteName\\BuyItem -name enabledProtocols -value $parentProtocols
Set-ASApplication -SiteName $SiteName -AutoStartMode All -VirtualPath BuyItem
                ",
                "Uninstall": "\r\n
Import-module WebAdministration;\r\n
Remove-WebApplication -Name BuyItem -Site $SiteName
                "
            }
        },
        {
            "Name":         "Buying.Endpoints.BidPlacement",
            "Type":         "WebSite",

            "PackageInfo":  { "Source": "ProcessServiceTest", "InternalPath":  "_PublishedWebsites/BidPlacement"  },

            "SiteName":     "ProcessService.Buying",
            "SiteUrl":      "http://localhost:8006/BidPlacement",
            "CleanDeploy":  true,
            "VerifyUrls":   [ "http://localhost/health/status/BidPlacementService" ],
            "Installable": {
                "TargetPath": "D:\\Services\\ProcessServices\\Buying\\Endpoints\\BidPlacement",

                "Install": "
Import-module WebAdministration;
New-Item IIS:\\Sites\\$SiteName\\BidPlacement -physicalPath $(pwd) -applicationPool \"${SiteName}\" -type Application
$parentProtocols = Get-ItemProperty IIS:\\Sites\\$SiteName -name enabledProtocols
Set-ItemProperty IIS:\\Sites\\$SiteName\\BidPlacement -name enabledProtocols -value $parentProtocols
Set-ASApplication -SiteName $SiteName -AutoStartMode All -VirtualPath BidPlacement
                ",
                "Uninstall": "\r\n
Import-module WebAdministration;\r\n
Remove-WebApplication -Name BidPlacement -Site $SiteName
                "
            }
        },
        {
            "Name":         "Buying.Endpoints.BidsMemberQuery",
            "Type":         "WebSite",

            "PackageInfo":  { "Source": "ProcessServiceTest", "InternalPath":  "_PublishedWebsites/BidsMemberQuery"  },

            "SiteName":     "ProcessService.Buying",
            "SiteUrl":      "http://localhost:8006/BidsMemberQuery",
            "CleanDeploy":  true,
            "Installable": {
                "TargetPath": "D:\\Services\\ProcessServices\\Buying\\Endpoints\\BidsMemberQuery",

                "Install": "
Import-module WebAdministration;
New-Item IIS:\\Sites\\$SiteName\\BidsMemberQuery -physicalPath $(pwd) -applicationPool \"${SiteName}\" -type Application
$parentProtocols = Get-ItemProperty IIS:\\Sites\\$SiteName -name enabledProtocols
Set-ItemProperty IIS:\\Sites\\$SiteName\\BidsMemberQuery -name enabledProtocols -value $parentProtocols
Set-ASApplication -SiteName $SiteName -AutoStartMode All -VirtualPath BidsMemberQuery
                ",
                "Uninstall": "\r\n
Import-module WebAdministration;\r\n
Remove-WebApplication -Name BidsMemberQuery -Site $SiteName
                "
            }
        },
        {
            "Name":         "Buying.Endpoints.BidsQuery",
            "Type":         "WebSite",

            "PackageInfo":  { "Source": "ProcessServiceTest", "InternalPath":  "_PublishedWebsites/BidsQuery"  },

            "SiteName":     "ProcessService.Buying",
            "SiteUrl":      "http://localhost:8006/BidsQuery",
            "CleanDeploy":  true,
            "Installable": {
                "TargetPath": "D:\\Services\\ProcessServices\\Buying\\Endpoints\\BidsQuery",

                "Install": "
Import-module WebAdministration;
New-Item IIS:\\Sites\\$SiteName\\BidsQuery -physicalPath $(pwd) -applicationPool \"${SiteName}\" -type Application
$parentProtocols = Get-ItemProperty IIS:\\Sites\\$SiteName -name enabledProtocols
Set-ItemProperty IIS:\\Sites\\$SiteName\\BidsQuery -name enabledProtocols -value $parentProtocols
Set-ASApplication -SiteName $SiteName -AutoStartMode All -VirtualPath BidsQuery
                ",
                "Uninstall": "\r\n
Import-module WebAdministration;\r\n
Remove-WebApplication -Name BidsQuery -Site $SiteName
                "
            }
        },


        {
            "Name":         "Buying.BuyingDenormalizer",
            "Type":         "WindowsService",
            "PackageInfo":  { "Source": "ProcessServiceTest", "InternalPath":  "_PublishedApplications/Buying/BuyingDenormalizer"  },
            "ServiceName":  "Buying.BuyingDenormalizer",
            "Installable": {
                "InstallType": "NServiceBus",
                "Credentials": {
                    "Username": {
                        "Type": "Text",
                        "Default": "tradera\\Buying_svc"
                    },
                    "Password": {
                        "Type": "Password"
                    }
                }
            }
        },
        {
            "Name":         "Buying.BuyingDenormalizer.Member",
            "Type":         "WindowsService",
            "ServiceName":  "Buying.BuyingDenormalizer.Member",
            "PackageInfo":  { "Source": "ProcessServiceTest", "InternalPath":  "_PublishedApplications/Buying/BuyingDenormalizer.Member"  },
            "Installable": {
                "TargetPath": "D:\\Services\\ProcessServices\\Buying\\Handlers\\BuyingDenormalizer.Member",
                "Install": ".\\BuyingDenormalizer.Member.exe install -username:\"$Username\" -password:\"$Password\" -servicename:\"Buying.BuyingDenormalizer.Member\" -displayname:\"Buying.BuyingDenormalizer.Member\"",
                "InstallParameters": {
                    "Username": {
                        "Type": "Text",
                        "Default": "tradera\\buying_svc"
                    },
                    "Password": {
                        "Type": "Password"
                    }
                },
                "Uninstall": ".\\BuyingDenormalizer.Member.exe uninstall -servicename:\"Buying.BuyingDenormalizer.Member\""
            }
        },
        {
            "Name":         "Buying.Finalization",
            "Type":         "WindowsService",
            "PackageInfo":  { "Source": "ProcessServiceTest", "InternalPath":  "_PublishedApplications/Buying/Finalization"  },
            "ServiceName":  "Buying.Finalization",
            "Installable": {
                "InstallType": "NServiceBus",
                "Credentials": {
                    "Username": {
                        "Type": "Text",
                        "Default": "tradera\\Buying_svc"
                    },
                    "Password": {
                        "Type": "Password"
                    }
                }
            }
        },
        {
            "Name":         "Buying.BidRemoval",
            "Type":         "WindowsService",
            "PackageInfo":  { "Source": "ProcessServiceTest", "InternalPath":  "_PublishedApplications/Buying/BidRemoval"  },
            "ServiceName":  "Buying.BidRemoval",
            "Installable": {
                "InstallType": "NServiceBus",
                "Credentials": {
                    "Username": {
                        "Type": "Text",
                        "Default": "tradera\\Buying_svc"
                    },
                    "Password": {
                        "Type": "Password"
                    }
                }
            }
        },
        {
            "Name":         "Buying.EventBridge.Handler",
            "Type":         "WindowsService",
            "PackageInfo":  { "Source": "ProcessServiceTest", "InternalPath":  "_PublishedApplications/Buying/EventBridge"  },
            "ServiceName":  "Buying.EventBridge",
            "Installable": {
                "TargetPath": "D:\\Services\\ProcessServices\\Buying\\Handlers\\EventBridge",
                "Install": ".\\NServiceBus.Host.exe -install -username=\"$Username\" -password=\"$Password\" -serviceName=\"$ServiceName\" -displayName=\"$ServiceName\" NServiceBus.Production NServiceBus.PerformanceCounters",
                "InstallParameters": {
                    "Username": {
                        "Type": "Text",
                        "Default": "tradera\\buying_svc"
                    },
                    "Password": {
                        "Type": "Password"
                    }
                },
                "Uninstall": ".\\NServiceBus.Host.exe -uninstall -serviceName=\"$ServiceName\""
            }
        },
        {
            "Name":         "FraudDetectionProcess.FraudDetectionHandler",
            "Type":         "WindowsService",
            "PackageInfo":  { "Source": "ProcessServiceTest", "InternalPath":  "_PublishedApplications/FraudDetectionProcess/FraudDetectionHandler"  },
            "ServiceName":  "FraudDetectionProcess.FraudDetectionHandler",
            "Installable": {
                "InstallType": "NServiceBus",
                "Credentials": {
                    "Username": {
                        "Type": "Text",
                        "Default": "tradera\\FraudDetection_svc"
                    },
                    "Password": {
                        "Type": "Password"
                    }
                }
            }
        },
        {
            "Name":         "FraudDetectionProcess.QueryService",
            "Type":         "WebSite",

            "PackageInfo":  { "Source": "ProcessServiceTest", "InternalPath":  "_PublishedWebsites/FraudDetectionQueryService"  },

            "SiteName":     "ProcessService.FraudDetectionProcess.Queries",
            "SiteUrl":      "http://localhost:8018/Services",
            "CleanDeploy":  true,
            "VerifyUrls":   [ "http://localhost/health/status/FraudDetectionProcessQueryService" ]
        },
        {
            "Name":         "FraudDetectionProcess.CommandService",
            "Type":         "WebSite",

            "PackageInfo":  { "Source": "ProcessServiceTest", "InternalPath":  "_PublishedWebsites/FraudDetectionCommandService"  },

            "SiteName":     "ProcessService.FraudDetectionProcess.Commands",
            "SiteUrl":      "http://localhost:8017/Services",
            "CleanDeploy":  true,
            "VerifyUrls":   [ "http://localhost/health/status/FraudDetectionProcessCommandService" ]
        },
        {
            "Name":         "Shipping.ShippingHandler",
            "Type":         "WindowsService",
            "PackageInfo":  { "Source": "ProcessServiceTest", "InternalPath":  "_PublishedApplications/Shipping/ShippingHandler"  },
            "ServiceName":  "Shipping.ShippingHandler",
            "Installable": {
                "InstallType": "NServiceBus",
                "Credentials": {
                    "Username": {
                        "Type": "Text",
                        "Default": "tradera\\shipping_svc"
                    },
                    "Password": {
                        "Type": "Password"
                    }
                }
            }
        },
        {
            "Name": "Shipping.Endpoints",
            "Type": "WebSite",
            "SiteUrl": "http://localhost:8044",
            "PackageInfo": { "Source": "ProcessServiceTest", "InternalPath":  "_PublishedWebsites/EmptySite"  },

            "Installable": {
                "TargetPath": "D:\\Services\\ProcessServices\\Shipping\\Endpoints\\Root",

                "Install": "
Import-module WebAdministration;
$Port = ([System.Uri]$SiteUrl).Port;
New-WebAppPool -Name \"${SiteName}\"
$pool = Get-Item \"IIS:\\AppPools\\${SiteName}\"
$pool.startMode = 'AlwaysRunning'
$pool.processModel.userName = $Username;
$pool.processModel.password = $Password;
$pool.processModel.identityType = 3;
$pool.managedRuntimeVersion = 'v4.0'
$pool | Set-Item
New-WebSite -Name $SiteName -ApplicationPool \"${SiteName}\" -PhysicalPath \"$(pwd)\" -Port $Port
Set-ItemProperty IIS:\\Sites\\$SiteName -name EnabledProtocols -value 'http,net.pipe,net.tcp'
Remove-ItemProperty -path IIS:\\Sites\\$SiteName -name bindings
New-ItemProperty -Path IIS:\\Sites\\$SiteName -name bindings -value @{protocol='net.tcp';bindingInformation=\"${Port}:*\"}
New-ItemProperty -Path IIS:\\Sites\\$SiteName -name bindings -value @{protocol='net.pipe';bindingInformation='*';ipaddress='*'}
                ",
                 "InstallParameters": {
                    "Username": { "Type": "Text", "Default": "tradera\\shipping_svc" },
                    "Password": { "Type": "Password"}
                },
                "Uninstall": "
Import-module WebAdministration;
Remove-WebSite -name $SiteName
Remove-WebAppPool -Name \"${SiteName}\"
                "
            }
        },
        {
            "Name": "Shipping.Endpoints.Command",
            "Type": "WebSite",
            "SiteName": "Shipping.Endpoints",
            "SiteUrl": "http://localhost:8044/Command",

            "PackageInfo": { "Source": "ProcessServiceTest", "InternalPath":  "_PublishedWebsites/Shipping/Shipping.Commands.Services"  },

            "Installable": {
                "TargetPath": "D:\\Services\\ProcessServices\\Shipping\\Endpoints\\Command",

                "Install": "
Import-module WebAdministration;
New-Item IIS:\\Sites\\$SiteName\\Command -physicalPath $(pwd) -applicationPool \"${SiteName}\" -type Application
$parentProtocols = Get-ItemProperty IIS:\\Sites\\$SiteName -name enabledProtocols
Set-ItemProperty IIS:\\Sites\\$SiteName\\Command -name enabledProtocols -value $parentProtocols
Set-ASApplication -SiteName $SiteName -AutoStartMode All -VirtualPath Command
                ",
                "Uninstall": "\r\n
Import-module WebAdministration;\r\n
Remove-WebApplication -Name Command -Site $SiteName
                "
            }
        },
        {
            "Name": "Shipping.Endpoints.Query",
            "Type": "WebSite",
            "SiteName": "Shipping.Endpoints",
            "SiteUrl": "http://localhost:8044/Query",

            "PackageInfo": { "Source": "ProcessServiceTest", "InternalPath":  "_PublishedWebsites/Shipping/Shipping.Query.Services"  },

            "Installable": {
            "TargetPath": "D:\\Services\\ProcessServices\\Shipping\\Endpoints\\Query",

            "Install": "
Import-module WebAdministration;
New-Item IIS:\\Sites\\$SiteName\\Query -physicalPath $(pwd) -applicationPool \"${SiteName}\" -type Application
$parentProtocols = Get-ItemProperty IIS:\\Sites\\$SiteName -name enabledProtocols
Set-ItemProperty IIS:\\Sites\\$SiteName\\Query -name enabledProtocols -value $parentProtocols
Set-ASApplication -SiteName $SiteName -AutoStartMode All -VirtualPath Query
                ",
                "Uninstall": "\r\n
Import-module WebAdministration;\r\n
Remove-WebApplication -Name Query -Site $SiteName
                "
            }
        },
        {
            "Name":         "WebApi.Browse.Denormalizer.Handler.HighPrio",
            "Type":         "WindowsService",
            "PackageInfo":  { "Source": "WebApiTest", "InternalPath":  "_PublishedApplications/WebApi/Browse.Denormalizer.Handler.HighPrio"  },
            "ServiceName":  "WebApi.Browse.Denormalizer.Handler.HighPrio",
            "Installable": {
                "TargetPath": "D:\\Services\\Applications\\WebApi\\Handlers\\Browse.Denormalizer.Handler.HighPrio",
                "Install": ".\\NServiceBus.Host.exe -install -username=\"$Username\" -password=\"$Password\" -serviceName=\"$ServiceName\" -displayName=\"$ServiceName\" NServiceBus.Production NServiceBus.PerformanceCounters",
                "InstallParameters": {
                    "Username": {
                        "Type": "Text",
                        "Default": "tradera\\WebApi_svc"
                    },
                    "Password": {
                        "Type": "Password"
                    }
                },
                "Uninstall": ".\\NServiceBus.Host.exe -uninstall -serviceName=\"$ServiceName\""
            }
        },
        {
            "Name":         "WebApi.Browse.Denormalizer.Handler.LowPrio",
            "Type":         "WindowsService",
            "PackageInfo":  { "Source": "WebApiTest", "InternalPath":  "_PublishedApplications/WebApi/Browse.Denormalizer.Handler.LowPrio"  },
            "ServiceName":  "WebApi.Browse.Denormalizer.Handler.LowPrio",
            "Installable": {
                "TargetPath": "D:\\Services\\Applications\\WebApi\\Handlers\\Browse.Denormalizer.Handler.LowPrio",
                "Install": ".\\NServiceBus.Host.exe -install -username=\"$Username\" -password=\"$Password\" -serviceName=\"$ServiceName\" -displayName=\"$ServiceName\" NServiceBus.Production NServiceBus.PerformanceCounters",
                "InstallParameters": {
                    "Username": {
                        "Type": "Text",
                        "Default": "tradera\\WebApi_svc"
                    },
                    "Password": {
                        "Type": "Password"
                    }
                },
                "Uninstall": ".\\NServiceBus.Host.exe -uninstall -serviceName=\"$ServiceName\""
            }
        },
        {
            "Name":         "MemberManagement.ProcessFeedback.Handler",
            "Type":         "WindowsService",
            "PackageInfo":  { "Source": "ProcessServiceTest", "InternalPath":  "_PublishedApplications/MemberManagement/ProcessFeedback"  },
            "ServiceName":  "MemberManagement.ProcessFeedback",
            "Installable": {
                "InstallType": "NServiceBus",
                "Credentials": {
                    "Username": {
                        "Type": "Text",
                        "Default": "tradera\\membermanagement_svc"
                    },
                    "Password": {
                        "Type": "Password"
                    }
                }
            }
        },

        {
            "Name":         "MemberManagement.ProfileRefinement.Handler",
            "Type":         "WindowsService",
            "PackageInfo":  { "Source": "ProcessServiceTest", "InternalPath":  "_PublishedApplications/MemberManagement/ProfileRefinement"  },
            "ServiceName":  "MemberManagement.ProfileRefinement",
            "Installable": {
                "InstallType": "NServiceBus",
                "Credentials": {
                    "Username": {
                        "Type": "Text",
                        "Default": "tradera\\MemberManagement_svc"
                    },
                    "Password": {
                        "Type": "Password"
                    }
                }
            }
        },

        {
            "Name": "MemberManagement.BatchSuspension.Handler",
            "Type": "WindowsService",
            "PackageInfo": { "Source": "ProcessServiceTest", "InternalPath":  "_PublishedApplications/MemberManagement/BatchSuspension.Handler"  },
            "Installable": {
                "TargetPath": "D:\\Services\\ProcessServices\\MemberManagement\\Handlers\\BatchSuspension.Handler",
                "Install": ".\\NServiceBus.Host.exe -install -username=\"$Username\" -password=\"$Password\" -serviceName=\"$ServiceName\" -displayName=\"$ServiceName\" NServiceBus.Production NServiceBus.PerformanceCounters",
                "InstallParameters": {
                    "Username": {
                        "Type": "Text",
                        "Default": "tradera\\MemberManagement_svc"
                    },
                    "Password": {
                        "Type": "Password"
                    }
                },
                "Uninstall": ".\\NServiceBus.Host.exe -uninstall -serviceName=\"$ServiceName\""
            }
        },

        {
            "Name":         "MemberManagement.EventBridge.Handler",
            "Type":         "WindowsService",
            "PackageInfo":  { "Source": "ProcessServiceTest", "InternalPath":  "_PublishedApplications/MemberManagement/EventBridge"  },
            "ServiceName":  "MemberManagement.EventBridge",
            "Installable": {
                "InstallType": "NServiceBus",
                "Credentials": {
                    "Username": {
                        "Type": "Text",
                        "Default": "tradera\\membermanagement_svc"
                    },
                    "Password": {
                        "Type": "Password"
                    }
                }
            }
        },
        {
            "Name": "MemberManagement.Endpoints",
            "Type": "WebSite",
            "SiteName": "ProcessService.MemberManagement",
            "SiteUrl": "http://localhost:8043",
            "PackageInfo": { "Source": "ProcessServiceTest", "InternalPath":  "_PublishedWebsites/EmptySite"  },

            "Installable": {
                "TargetPath": "D:\\Services\\ProcessServices\\MemberManagement\\Endpoints\\Root",

                "Install": "
Import-module WebAdministration;
$Port = ([System.Uri]$SiteUrl).Port;
New-WebAppPool -Name \"${SiteName}\"
$pool = Get-Item \"IIS:\\AppPools\\${SiteName}\"
$pool.startMode = 'AlwaysRunning'
$pool.processModel.userName = $Username;
$pool.processModel.password = $Password;
$pool.processModel.identityType = 3;
$pool.managedRuntimeVersion = 'v4.0'
$pool | Set-Item
New-WebSite -Name $SiteName -ApplicationPool \"${SiteName}\" -PhysicalPath \"$(pwd)\" -Port $Port
Set-ItemProperty IIS:\\Sites\\$SiteName -name EnabledProtocols -value 'net.pipe,net.tcp'
New-ItemProperty -Path IIS:\\Sites\\$SiteName -name bindings -value @{protocol='net.tcp';bindingInformation=\"8043:*\"}
New-ItemProperty -Path IIS:\\Sites\\$SiteName -name bindings -value @{protocol='net.pipe';bindingInformation='*';ipaddress='*'}
                ",
                 "InstallParameters": {
                    "Username": { "Type": "Text", "Default": "tradera\\membermanagement_svc" },
                    "Password": { "Type": "Password"}
                },
                "Uninstall": "
Import-module WebAdministration;
Remove-WebSite -name $SiteName
Remove-WebAppPool -Name \"${SiteName}\"
                "
            }
        },
       {
            "Name":         "MemberManagement.Endpoints.MemberCommand",
            "Type":         "WebSite",
            "PackageInfo":  { "Source": "ProcessServiceTest", "InternalPath":  "_PublishedWebsites/MemberCommand"  },

            "SiteName":     "ProcessService.MemberManagement",
            "SiteUrl":      "http://localhost:8043/MemberCommand",
            "CleanDeploy":  true,
            "VerifyUrls":   [ "http://localhost/health/status/MemberManagementCommandService" ],
            "Installable": {
                "TargetPath": "D:\\Services\\ProcessServices\\MemberManagement\\Endpoints\\MemberCommand",

                "Install": "
Import-module WebAdministration;
New-Item IIS:\\Sites\\$SiteName\\MemberCommand -physicalPath $(pwd) -applicationPool \"${SiteName}\" -type Application
$parentProtocols = Get-ItemProperty IIS:\\Sites\\$SiteName -name enabledProtocols
Set-ItemProperty IIS:\\Sites\\$SiteName\\MemberCommand -name enabledProtocols -value $parentProtocols
Set-ASApplication -SiteName $SiteName -AutoStartMode All -VirtualPath MemberCommand
                ",
                "Uninstall": "\r\n
Import-module WebAdministration;\r\n
Remove-WebApplication -Name MemberCommand -Site $SiteName
                "
            }
        },

       {
            "Name":         "MemberManagement.Endpoints.MemberQuery",
            "Type":         "WebSite",
            "PackageInfo":  { "Source": "ProcessServiceTest", "InternalPath":  "_PublishedWebsites/MemberQuery"  },

            "SiteName":     "ProcessService.MemberManagement",
            "SiteUrl":      "http://localhost:8043/MemberQuery",
            "CleanDeploy":  true,
            "VerifyUrls":   [ "http://localhost/health/status/MemberManagementQueryService" ],
            "Installable": {
                "TargetPath": "D:\\Services\\ProcessServices\\MemberManagement\\Endpoints\\MemberQuery",

                "Install": "
Import-module WebAdministration;
New-Item IIS:\\Sites\\$SiteName\\MemberQuery -physicalPath $(pwd) -applicationPool \"${SiteName}\" -type Application
$parentProtocols = Get-ItemProperty IIS:\\Sites\\$SiteName -name enabledProtocols
Set-ItemProperty IIS:\\Sites\\$SiteName\\MemberQuery -name enabledProtocols -value $parentProtocols
Set-ASApplication -SiteName $SiteName -AutoStartMode All -VirtualPath MemberQuery
                ",
                "Uninstall": "\r\n
Import-module WebAdministration;\r\n
Remove-WebApplication -Name MemberQuery -Site $SiteName
                "
            }
        },


        {
            "Name": "Blueshift.Tracker",
            "Type": "WindowsService",
            "PackageInfo": {
                "Source": "BlueshiftTracker"
            },
            "Installable": {
                "TargetPath": "D:\\Applications\\Blueshift.Tracker",
                "Install": ".\\Tradera.Blueshift.Tracker.exe install -username=\"$Username\" -password=\"$Password\"",
                "InstallParameters": {
                    "Username": {
                        "Type": "Text",
                        "Default": "tradera\\Marketing_SVC"
                    },
                    "Password": {
                        "Type": "Password"
                    }
                },
                "Uninstall": ".\\Tradera.Blueshift.Tracker.exe uninstall"
            }
        },


        {
            "Name": "App.Push",
            "Type": "WindowsService",
            "PackageInfo": {
                "Source": "AppPush"
            },
            "Installable": {
                "TargetPath": "D:\\Applications\\App.Push",
                "Install": ".\\Tradera.App.Push.exe install -username=\"$Username\" -password=\"$Password\"",
                "InstallParameters": {
                    "Username": {
                        "Type": "Text",
                        "Default": "tradera\\App_Push_SVC"
                    },
                    "Password": {
                        "Type": "Password"
                    }
                },
                "Uninstall": ".\\Tradera.App.Push.exe uninstall"
            }
        },
        {
            "Name": "App.Wishlist.Reminders.Generator",
            "Type": "WindowsService",
            "PackageInfo": {
                "Source": "App.Wishlist.Reminders"
            },
            "Installable": {
                "TargetPath": "D:\\Applications\\App.Wishlist.Reminders",
                "Install": ".\\Tradera.App.Wishlist.Reminders.exe install -username=\"$Username\" -password=\"$Password\"",
                "InstallParameters": {
                    "Username": { "Type": "Text", "Default": "tradera\\App_Push_SVC" },
                    "Password": { "Type": "Password" }
                },
                "Uninstall": ".\\Tradera.App.Wishlist.Reminders.exe uninstall"
            }
        },

        {
            "Name": "MyTradera.Denormalizer.Item.Service",
            "Type": "WindowsService",
            "PackageInfo": {
                "Source": "MyTradera.Denormalizer.Item.Drop"
            },
            "Installable": {
                "TargetPath": "D:\\Services\\ProcessServices\\MyTradera\\Denormalizer.Item.Service",
                "Install": ".\\Tradera.MyTradera.Denormalizer.Item.Service.exe install -username=\"$Username\" -password=\"$Password\"",
                "InstallParameters": {
                    "Username": {
                        "Type": "Text",
                        "Default": "tradera\\mytradera_svc"
                    },
                    "Password": {
                        "Type": "Password"
                    }
                },
                "Uninstall": ".\\Tradera.MyTradera.Denormalizer.Item.Service.exe uninstall"
            }
        },

        {
            "Name": "MyTradera.Denormalizer.Transaction.Service",
            "Type": "WindowsService",
            "PackageInfo": {
                "Source": "MyTradera.Denormalizer.Transaction.Drop"
            },
            "Installable": {
                "TargetPath": "D:\\Services\\ProcessServices\\MyTradera\\Denormalizer.Transaction.Service",
                "Install": ".\\Tradera.MyTradera.Denormalizer.Transaction.Service.exe install -username=\"$Username\" -password=\"$Password\"",
                "InstallParameters": {
                    "Username": {
                        "Type": "Text",
                        "Default": "tradera\\mytradera_svc"
                    },
                    "Password": {
                        "Type": "Password"
                    }
                },
                "Uninstall": ".\\Tradera.MyTradera.Denormalizer.Transaction.Service.exe uninstall"
            }
        },

        {
            "Name": "MyTradera.Initializer.Web.Service",
            "Type": "WindowsService",
            "PackageInfo": {
                "Source": "MyTradera.Initializer.Web.Drop"
            },
            "Url": "http://localhost:8500",
            "Installable": {
                "TargetPath": "D:\\Services\\ProcessServices\\MyTradera\\Initializer.Web.Service",
                "Install": ".\\Tradera.MyTradera.Initializer.Web.Service.exe install -username=\"$Username\" -password=\"$Password\"",
                "InstallParameters": {
                    "Username": {
                        "Type": "Text",
                        "Default": "tradera\\mytradera_svc"
                    },
                    "Password": {
                        "Type": "Password"
                    }
                },
                "Uninstall": ".\\Tradera.MyTradera.Initializer.Web.Service.exe uninstall"
            }
        },

        {
            "Name": "MyTradera.Denormalizer.SecondLevelRetry.Service",
            "Type": "WindowsService",
            "PackageInfo": {
                "Source": "MyTradera.SecondLevelRetry.Drop"
            },
            "Installable": {
                "TargetPath": "D:\\Services\\ProcessServices\\MyTradera\\SecondLevelRetry",
                "Install": ".\\Tradera.MyTradera.Denormalizer.SecondLevelRetry.Service install -username=\"$Username\" -password=\"$Password\"",
                "InstallParameters": {
                    "Username": {
                        "Type": "Text",
                        "Default": "tradera\\mytradera_svc"
                    },
                    "Password": {
                        "Type": "Password"
                    }
                },
                "Uninstall": ".\\Tradera.MyTradera.Denormalizer.SecondLevelRetry.Service uninstall"
            }
        },
        {
            "Name": "Metadata.Service",
            "Type": "WindowsService",
            "PackageInfo": {
                "Source": "Metadata",
                "SourceRelativePath": "Metadata.Service"
            },
            "Installable": {
                "TargetPath": "D:\\Services\\ProcessServices\\Metadata\\Handlers\\Metadata.Service\\",
                "Install": ".\\Tradera.Metadata.Service.exe install -username=\"$Username\" -password=\"$Password\"",
                "InstallParameters": {
                    "Username": {
                        "Type": "Text",
                        "Default": "tradera\\Metadata_svc"
                    },
                    "Password": {
                        "Type": "Password"
                    }
                },
                "Uninstall": ".\\Tradera.Metadata.Service.exe uninstall"
            }
        },
        {
            "Name": "UserRegistration.ApplicantFinalization",
            "Type": "WindowsService",
            "PackageInfo": { "Source": "ProcessServiceTest", "InternalPath":  "_PublishedApplications/UserRegistration/ApplicantFinalization"  },
            "Installable": {
                "TargetPath": "D:\\Services\\ProcessServices\\UserRegistration\\Handlers\\ApplicantFinalization",
                "Install": ".\\NServiceBus.Host.exe -install -username=\"$Username\" -password=\"$Password\" -serviceName=\"$ServiceName\" -displayName=\"$ServiceName\" NServiceBus.Production NServiceBus.PerformanceCounters",
                "InstallParameters": {
                    "Username": {
                        "Type": "Text",
                        "Default": "tradera\\userregistration_svc"
                    },
                    "Password": {
                        "Type": "Password"
                    }
                },
                "Uninstall": ".\\NServiceBus.Host.exe -uninstall -serviceName=\"$ServiceName\""
            }
        },
        {
            "Name": "UserRegistration.ApplicantFullValidation",
            "Type": "WindowsService",
            "PackageInfo": { "Source": "ProcessServiceTest", "InternalPath":  "_PublishedApplications/UserRegistration/ApplicantFullValidation"  },
            "Installable": {
                "TargetPath": "D:\\Services\\ProcessServices\\UserRegistration\\Handlers\\ApplicantFullValidation",
                "Install": ".\\NServiceBus.Host.exe -install -username=\"$Username\" -password=\"$Password\" -serviceName=\"$ServiceName\" -displayName=\"$ServiceName\" NServiceBus.Production NServiceBus.PerformanceCounters",
                "InstallParameters": {
                    "Username": {
                        "Type": "Text",
                        "Default": "tradera\\userregistration_svc"
                    },
                    "Password": {
                        "Type": "Password"
                    }
                },
                "Uninstall": ".\\NServiceBus.Host.exe -uninstall -serviceName=\"$ServiceName\""
            }
        },
        {
            "Name": "UserRegistration.ApplicantRegistration",
            "Type": "WebSite",
            "SiteName": "ProcessService.UserRegistration",
            "SiteUrl": "http://localhost:8005/ApplicantRegistration",
            "PackageInfo": { "Source": "ProcessServiceTest", "InternalPath":  "_PublishedWebsites/ApplicantRegistration"  },
            "CleanDeploy":  true,
            "Installable": {
                "TargetPath": "D:\\Services\\ProcessServices\\UserRegistration\\Endpoints\\ApplicantRegistration",

                "Install": "
Import-module WebAdministration;
$SitePath = Split-Path $(pwd);
$Port = ([System.Uri]$SiteUrl).Port;
New-WebAppPool -Name \"${SiteName}\"
$pool = Get-Item \"IIS:\\AppPools\\${SiteName}\"
$pool.startMode = 'AlwaysRunning'
$pool.processModel.userName = $Username;
$pool.processModel.password = $Password;
$pool.processModel.identityType = 3;
$pool.managedRuntimeVersion = 'v4.0'
$pool | Set-Item
New-WebSite -Name $SiteName -ApplicationPool \"${SiteName}\" -PhysicalPath \"${SitePath}\" -Port $Port
Set-ItemProperty IIS:\\Sites\\$SiteName -name EnabledProtocols -value 'http,net.pipe,net.tcp'
Remove-ItemProperty -path IIS:\\Sites\\$SiteName -name bindings
New-ItemProperty -Path IIS:\\Sites\\$SiteName -name bindings -value @{protocol='net.tcp';bindingInformation=\"${Port}:*\"}
New-ItemProperty -Path IIS:\\Sites\\$SiteName -name bindings -value @{protocol='net.pipe';bindingInformation='*';ipaddress='*'}

New-Item IIS:\\Sites\\$SiteName\\ApplicantRegistration -physicalPath \"$(pwd)\" -applicationPool \"${SiteName}\" -type Application
$parentProtocols = Get-ItemProperty IIS:\\Sites\\$SiteName -name enabledProtocols
Set-ItemProperty IIS:\\Sites\\$SiteName\\ApplicantRegistration -name enabledProtocols -value $parentProtocols
Set-ASApplication -SiteName $SiteName -AutoStartMode All -VirtualPath ApplicantRegistration
                ",
                 "InstallParameters": {
                    "Username": { "Type": "Text", "Default": "tradera\\userregistration_svc" },
                    "Password": { "Type": "Password"}
                },
                "Uninstall": "
Import-module WebAdministration
Remove-WebApplication -Name ApplicantRegistration -Site $SiteName
Remove-WebSite -name $SiteName
Remove-WebAppPool -Name \"${SiteName}\"
                "
            }
        },

        {
            "Name": "Finding.Notification.SaveSearches.Service",
            "Type":  "PowerShell",

            "PackageInfo": { "Source": "Finding.Notifications.SaveSearches.Service" },

            "Script":
            "
            ./install.ps1 -Environment test
            "
        },

        {
            "Name": "Finding.LiveIndexing.Service",
            "Type": "WindowsService",
            "PackageInfo": {
                "Source": "Finding.LiveIndexing.Service"
            },
            "Installable": {
                "TargetPath": "D:\\Applications\\Finding.LiveIndexing.Service",
                "Install": ".\\Tradera.Finding.Search.LiveIndexing.Service.exe install -username=\"$Username\" -password=\"$Password\"",
                "InstallParameters": {
                    "Username": {
                        "Type": "Text",
                        "Default": "tradera\\finding_svc"
                    },
                    "Password": {
                        "Type": "Password"
                    }
                },
                "Uninstall": ".\\Tradera.Finding.Search.LiveIndexing.Service.exe uninstall"
            }
        },

        {
            "Name": "Finding.SavedSearches.Percolator.Service",
            "Type": "WindowsService",
            "PackageInfo": {
                "Source": "Tradera.Finding.SavedSearch.Percolator.Service"
            },
            "Installable": {
                "TargetPath": "D:\\Applications\\Finding\\SavedSearches\\Percolator.Service",
                "Install": ".\\EbaySweden.Trading.Finding.Notifications.Service.exe install -username=\"$Username\" -password=\"$Password\" -servicename=\"Finding.SavedSearches.Percolator.Service\" -displayname=\"Finding.SavedSearches.Percolator.Service\"",
                "InstallParameters": {
                    "Username": {
                        "Type": "Text",
                        "Default": "tradera\\finding_svc"
                    },
                    "Password": {
                        "Type": "Password"
                    }
                },
                "Uninstall": ".\\EbaySweden.Trading.Finding.Notifications.Service uninstall -servicename=\"Finding.SavedSearches.Percolator.Service\""
            }
        },

        {
            "Name":         "EventPusher.BuyingNotification",
            "Type":         "WindowsService",
            "ServiceName":  "EventPusher.BuyingNotification",

            "PackageInfo":  { "Source": "Tradera.Test.Drops", "InternalPath":  "_PublishedApplications/EventPusher/EventPusher.BuyingNotification"  },
            "Installable": {
                "TargetPath": "D:\\Applications\\EventPusher\\Services\\EventPusher.BuyingNotification",
                "Install": ".\\EventPusher.BuyingNotification.exe install -username=\"$Username\" -password=\"$Password\"",
                "InstallParameters": {
                    "Username": {
                        "Type": "Text",
                        "Default": "tradera\\eventpusher_svc"
                    },
                    "Password": {
                        "Type": "Password"
                    }
                },
                "Uninstall": ".\\EventPusher.BuyingNotification.exe uninstall"
            }
        },
        {
            "Name":         "EventPusher.ListingNotification",
            "Type":         "WindowsService",
            "ServiceName":  "EventPusher.ListingNotification",

            "PackageInfo":  { "Source": "Tradera.Test.Drops", "InternalPath":  "_PublishedApplications/EventPusher/EventPusher.ListingNotification"  },
            "Installable": {
                "TargetPath": "D:\\Applications\\EventPusher\\Services\\EventPusher.ListingNotification",
                "Install": ".\\EventPusher.ListingNotification.exe install -username=\"$Username\" -password=\"$Password\"",
                "InstallParameters": {
                    "Username": {
                        "Type": "Text",
                        "Default": "tradera\\eventpusher_svc"
                    },
                    "Password": {
                        "Type": "Password"
                    }
                },
                "Uninstall": ".\\EventPusher.ListingNotification.exe uninstall"
            }
        },
    ]
}
